(function() {var implementors = {};
implementors["vcf2parquet"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"vcf2parquet/cli/enum.Compression.html\" title=\"enum vcf2parquet::cli::Compression\">Compression</a>","synthetic":true,"types":["vcf2parquet::cli::Compression"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"vcf2parquet/cli/struct.Command.html\" title=\"struct vcf2parquet::cli::Command\">Command</a>","synthetic":true,"types":["vcf2parquet::cli::Command"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.61.0/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"vcf2parquet/error/enum.Error.html\" title=\"enum vcf2parquet::error::Error\">Error</a>","synthetic":true,"types":["vcf2parquet::error::Error"]}];
implementors["vcf2parquet_lib"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"vcf2parquet_lib/error/enum.Error.html\" title=\"enum vcf2parquet_lib::error::Error\">Error</a>","synthetic":true,"types":["vcf2parquet_lib::error::Error"]},{"text":"impl Freeze for <a class=\"struct\" href=\"vcf2parquet_lib/name2data/struct.Name2Data.html\" title=\"struct vcf2parquet_lib::name2data::Name2Data\">Name2Data</a>","synthetic":true,"types":["vcf2parquet_lib::name2data::Name2Data"]},{"text":"impl Freeze for <a class=\"enum\" href=\"vcf2parquet_lib/name2data/enum.ColumnData.html\" title=\"enum vcf2parquet_lib::name2data::ColumnData\">ColumnData</a>","synthetic":true,"types":["vcf2parquet_lib::name2data::ColumnData"]},{"text":"impl&lt;'a, R&gt; Freeze for <a class=\"struct\" href=\"vcf2parquet_lib/record2chunk/struct.Record2Chunk.html\" title=\"struct vcf2parquet_lib::record2chunk::Record2Chunk\">Record2Chunk</a>&lt;'a, R&gt;","synthetic":true,"types":["vcf2parquet_lib::record2chunk::Record2Chunk"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()