searchState.loadedDescShard("vcf2parquet", 0, "vcf2parquet library\ncli of vcf2parquet-bin\nStruct to link name and data\nvcf2parquet error\nStruct to link name and data\nConvert vcf record iterator into Parquet chunk\nConstruct parquet schema corresponding to vcf\nRead <code>input</code> vcf and write each row group in a parquet file …\nRead <code>input</code> vcf and write parquet in <code>output</code>\nBrotly compression\nDefine cli of vcf2parquet\nCompression available for user\nConvert a vcf in a parquet\nConvert a vcf in a parquet\nGzip compression\nLz4 compression\nLzo compression\nParquet version available for user\nSnappy compression\nConvert a vcf in multiple parquet file each file contains …\nConvert a vcf in multiple parquet file each file contains …\nEnum to manage sub command\nNo compression\nParquet version 1\nParquet version 2\nZstd compression\nGet batch_size set by user or default value\nGet compression set by user or default value\nGet output format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet info optional\nGet input\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet output\nGet parquet version\nGet read buffer size\nGet subcommand\nBoolean column\nStores arrow array builders for each column datatype\nFloat32 column\nInt32 column\nList of float32 column\nList of int32 column\nList of string column\nString column\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert ColumnData in Arrow2 array\nCheck if array is empty (not used for now)\nGet the length of internal array\nCreates a new ColumnData based on arrow type, length and …\nAdd a boolean value in array, if it’s not a boolean …\nAdd a f32 value in array, if it’s not a float array …\nAdd a i32 value in array, if it’s not a integer array …\nAdd a Null value in array\nAdd a string value in array, if it’s not a string array …\nAdd a vector of float value in array, if it’s not a …\nAdd a vector of integer value in array, if it’s not a …\nAdd a vector of string value in array, if it’s not a …\nArrow error\nContains the error value\nError type\nIo error\nNiffler error\nNot support type conversion\nNoodles header vcf error\nContains the success value\nParquet error\nResult type\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAlias of std::collections::HashMap that associate a column …\nAdd a vcf record in std::collections::HashMap struct\nReturns the argument unchanged.\nJust a wrapper arround std::collections::HashMap::get\nJust a wrapper arround std::collections::HashMap::get_mut\nCalls <code>U::from(self)</code>.\nConvert Name2Data in vector of arrow2 array\nCreate a new Name2Data, vcf header is required to add info …\nConvert vcf record iterator into Parquet chunk\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new Record2Chunk\nGenerate a parquet schema corresponding to vcf header")