var searchIndex = new Map(JSON.parse('[["vcf2parquet",{"t":"CCCCCCHHPFGFPPPPGPFPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPPPPPNNNNNNNNNNNNNNNNNNNNPPGPPPPPPINNNNNNNNNNNNNNNNFNNNNNNNNNNNNNFNNNNNNNNNNH","n":["cli","columndata","error","name2data","record2chunk","schema","vcf2multiparquet","vcf2parquet","Brotli","Command","Compression","Convert","","Gzip","Lz4","Lzo","ParquetVersion","Snappy","Split","","SubCommand","Uncompressed","V1","V2","Zstd","augment_args","","","augment_args_for_update","","","augment_subcommands","augment_subcommands_for_update","batch_size","borrow","","","","","","borrow_mut","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","command","","","","command_for_update","","","","compression","fmt","","","","","","format","from","","","","","","from_arg_matches","","","","from_arg_matches_mut","","","","group_id","","","has_subcommand","info_optional","input","into","","","","","","output","parquet_version","read_buffer","subcommand","to_owned","","","","","to_possible_value","","try_from","","","","","","try_into","","","","","","type_id","","","","","","update_from_arg_matches","","","","update_from_arg_matches_mut","","","","value_variants","","Bool","ColumnData","Float","Int","ListFloat","ListInt","ListString","String","borrow","borrow_mut","fmt","from","into","into_arc","is_empty","len","new","push_bool","push_f32","push_i32","push_null","push_string","push_vecf32","push_veci32","push_vecstring","try_from","try_into","type_id","Arrow","Err","Error","Io","Niffler","NoConversion","NoodlesHeader","Ok","Parquet","Result","borrow","borrow_mut","fmt","","from","","","","","","into","source","to_string","try_from","try_into","type_id","Name2Data","add_record","borrow","borrow_mut","fmt","from","get","get_mut","into","into_arc","new","try_from","try_into","type_id","Record2Chunk","borrow","borrow_mut","from","into","into_iter","new","next","try_from","try_into","type_id","from_header"],"q":[[0,"vcf2parquet"],[8,"vcf2parquet::cli"],[142,"vcf2parquet::columndata"],[170,"vcf2parquet::error"],[196,"vcf2parquet::name2data"],[210,"vcf2parquet::record2chunk"],[221,"vcf2parquet::schema"],[222,"parquet::basic"],[223,"parquet::file::properties"],[224,"std::io"],[225,"core::marker"],[226,"clap_builder::builder::command"],[227,"core::fmt"],[228,"clap_builder::parser::matches::arg_matches"],[229,"clap_builder"],[230,"core::result"],[231,"clap_builder::util::id"],[232,"core::option"],[233,"std::path"],[234,"clap_builder::builder::possible_value"],[235,"core::any"],[236,"arrow_array::array"],[237,"alloc::sync"],[238,"arrow_schema::datatype"],[239,"alloc::string"],[240,"alloc::vec"],[241,"arrow::error"],[242,"arrow_schema::error"],[243,"parquet::errors"],[244,"std::io::error"],[245,"noodles_vcf::header::parser"],[246,"niffler::error"],[247,"core::error"],[248,"noodles_vcf::record"],[249,"noodles_vcf::header"],[250,"arrow_schema::field"],[251,"rustc_hash"],[252,"arrow_schema::schema"],[253,"core::iter::traits::iterator"]],"i":"````````B````Bb111`1`0`1An02AlBdBf210442352410352410354103541035410241024102352410035241024102410210422352410122235410353524103524103524102410241035D``00000000000000000000000000EbAb`111101`1111111111111111`F`000000000000`Fl000000000`","f":"``````{{{d{bc}}{d{f}}hjln}{{Ab{A`}}}Ad}{{{d{bc}}{d{be}}hjln}{{Ab{A`}}}Ad{AfAh}}`````````````````{AjAj}0000000{{{d{Al}}}h}{d{{d{c}}}{}}00000{{{d{b}}}{{d{bc}}}{}}00000{{{d{An}}}An}{{{d{B`}}}B`}{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{{d{Bf}}}Bf}{{d{d{bc}}}A`{}}0000{{dBh}A`}0000{{}Aj}0000000{{{d{Al}}}j}{{{d{An}}{d{bBj}}}Bl}{{{d{B`}}{d{bBj}}}Bl}{{{d{Al}}{d{bBj}}}Bl}{{{d{Bb}}{d{bBj}}}Bl}{{{d{Bd}}{d{bBj}}}Bl}{{{d{Bf}}{d{bBj}}}Bl}{{{d{Bf}}}{{d{f}}}}{cc{}}00000{{{d{Bn}}}{{Cb{AlC`}}}}{{{d{Bn}}}{{Cb{BbC`}}}}{{{d{Bn}}}{{Cb{BdC`}}}}{{{d{Bn}}}{{Cb{BfC`}}}}{{{d{bBn}}}{{Cb{AlC`}}}}{{{d{bBn}}}{{Cb{BbC`}}}}{{{d{bBn}}}{{Cb{BdC`}}}}{{{d{bBn}}}{{Cb{BfC`}}}}{{}{{Cf{Cd}}}}00{{{d{f}}}l}{{{d{Al}}}l}{{{d{Al}}}{{d{Ch}}}}{{}c{}}00000{{{d{Bd}}}{{d{Ch}}}}{{{d{Al}}}n}{{{d{Al}}}h}{{{d{Al}}}{{d{Bb}}}}{dc{}}0000{{{d{An}}}{{Cf{Cj}}}}{{{d{B`}}}{{Cf{Cj}}}}{c{{Cb{e}}}{}{}}00000{{}{{Cb{c}}}{}}00000{dCl}00000{{{d{bAl}}{d{Bn}}}{{Cb{A`C`}}}}{{{d{bBb}}{d{Bn}}}{{Cb{A`C`}}}}{{{d{bBd}}{d{Bn}}}{{Cb{A`C`}}}}{{{d{bBf}}{d{Bn}}}{{Cb{A`C`}}}}{{{d{bAl}}{d{bBn}}}{{Cb{A`C`}}}}{{{d{bBb}}{d{bBn}}}{{Cb{A`C`}}}}{{{d{bBd}}{d{bBn}}}{{Cb{A`C`}}}}{{{d{bBf}}{d{bBn}}}{{Cb{A`C`}}}}{{}{{d{{Cn{An}}}}}}{{}{{d{{Cn{B`}}}}}}````````{d{{d{c}}}{}}{{{d{b}}}{{d{bc}}}{}}{{{d{D`}}{d{bBj}}}Bl}{cc{}}{{}c{}}{D`{{Dd{Db}}}}{{{d{D`}}}l}{{{d{D`}}}h}{{{d{Df}}h{d{f}}l}D`}{{{d{bD`}}l}A`}{{{d{bD`}}{Cf{Dh}}}A`}{{{d{bD`}}{Cf{Dj}}}A`}{{{d{bD`}}}A`}{{{d{bD`}}Dl}A`}{{{d{bD`}}{Dn{{Cf{Dh}}}}}{{E`{A`}}}}{{{d{bD`}}{Dn{{Cf{Dj}}}}}{{E`{A`}}}}{{{d{bD`}}{Dn{{Cf{Dl}}}}}{{E`{A`}}}}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{dCl}``````````{d{{d{c}}}{}}{{{d{b}}}{{d{bc}}}{}}{{{d{Eb}}{d{bBj}}}Bl}0{EdEb}{EfEb}{EhEb}{EjEb}{ElEb}{cc{}}{{}c{}}{{{d{Eb}}}{{Cf{{d{En}}}}}}{dDl}>=<`{{{d{bF`}}Fb{d{Fd}}{d{{Fh{DlFf}}}}}{{Cb{A`Ed}}}}<;{{{d{F`}}{d{bBj}}}Bl}5{{{d{F`}}{d{f}}}{{Cf{{d{D`}}}}}}{{{d{bF`}}{d{f}}}{{Cf{{d{bD`}}}}}}6{{F`{d{Fj}}}{{Dn{{Dd{Db}}}}}}{{h{d{Fj}}}F`}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{dCl}`{d{{d{c}}}{}}{{{d{b}}}{{d{bc}}}{}}>={{}c{}}{{chFd{Dd{Fj}}}{{Fl{c}}}{{Gb{}{{Fn{{G`{Fb}}}}}}}}{{{d{b{Fl{c}}}}}{{Cf{e}}}{{Gb{}{{Fn{{G`{Fb}}}}}}}{}}765{{{d{Fd}}l}{{Ab{Fj}}}}","D":"Kl","p":[[0,"mut"],[1,"reference",null,null,1],[1,"str"],[1,"usize"],[6,"Compression",222],[1,"bool"],[6,"WriterVersion",223],[1,"unit"],[8,"Result",170],[10,"BufRead",224],[10,"Write",224],[10,"Send",225],[5,"Command",226],[5,"Command",8],[6,"ParquetVersion",8],[6,"Compression",8],[6,"SubCommand",8],[5,"Convert",8],[5,"Split",8],[1,"u8"],[5,"Formatter",227],[8,"Result",227],[5,"ArgMatches",228],[8,"Error",229],[6,"Result",230,null,1],[5,"Id",231],[6,"Option",232,null,1],[5,"PathBuf",233],[5,"PossibleValue",234],[5,"TypeId",235],[1,"slice"],[6,"ColumnData",142],[10,"Array",236],[5,"Arc",237,null,1],[6,"DataType",238],[1,"f32"],[1,"i32"],[5,"String",239],[5,"Vec",240],[8,"Result",241],[6,"Error",170],[6,"ArrowError",242],[6,"ParquetError",243],[5,"Error",244],[6,"ParseError",245],[6,"Error",246],[10,"Error",247],[5,"Name2Data",196],[5,"Record",248],[5,"Header",249],[5,"Field",250],[8,"FxHashMap",251],[5,"Schema",252],[5,"Record2Chunk",210],[17,"Item"],[8,"Result",244],[10,"Iterator",253]],"r":[],"b":[[182,"impl-Display-for-Error"],[183,"impl-Debug-for-Error"],[184,"impl-From%3CArrowError%3E-for-Error"],[185,"impl-From%3CParquetError%3E-for-Error"],[186,"impl-From%3CError%3E-for-Error"],[187,"impl-From%3CParseError%3E-for-Error"],[188,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIAADgAaAAcAIwAiAEcABQBUAAsAbAAiAJcAAgCoAAIAtQAIAMAABADHAAIA0AACANQAAQDYAAAA2gADAA==","P":[[6,"R"],[7,"R,W"],[25,""],[34,"T"],[46,""],[51,"T"],[56,""],[77,"T"],[83,""],[97,"U"],[103,""],[107,"T"],[112,""],[114,"U,T"],[120,"U"],[126,""],[150,"T"],[152,""],[153,"T"],[154,"U"],[155,""],[167,"U,T"],[168,"U"],[169,""],[180,"T"],[182,""],[189,"T"],[190,"U"],[191,""],[193,"U,T"],[194,"U"],[195,""],[198,"T"],[200,""],[201,"T"],[202,""],[204,"U"],[205,""],[207,"U,T"],[208,"U"],[209,""],[211,"T"],[214,"U"],[215,"I"],[216,"T"],[217,"T,Iterator::Item"],[218,"U,T"],[219,"U"],[220,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7270]}